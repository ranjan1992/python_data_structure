import queue, sys
sys.setrecursionlimit(10**6)

class TreeNode :
    def __init__(self, data) :
        self.data = data
        self.children = list()

def inputLevelWise() :
    li = [int(elem) for elem in list(input().strip().split())]
    i = 0
    data = li[i] 
    i += 1
    if data == -1 :
        return None
    root = TreeNode(data) 
    q = queue.Queue()
    q.put(root)
    while (not q.empty()) :
        frontNode = q.get()
        noOfChildren = li[i]
        i += 1
        childrenArray = li[i : i+noOfChildren]
        for childData in childrenArray :
            childNode = TreeNode(childData)
            frontNode.children.append(childNode)
            q.put(childNode)
        i = i+noOfChildren
    return root


#Height of the tree

def height(root):
    if root == None:
        return 0
    maxHeight=0
    for child in root.children:
        ChildHeight=height(child)
        if ChildHeight>maxHeight:
            maxHeight=ChildHeight
    return maxHeight+1




root = inputLevelWise()
print(height(root))
